description: Builds the iOS app at the given path with the given build scheme and configuration. This should be run only after installing NPM dependencies.

parameters:
  project_type:
    description: If the iOS app is built using a project file (*.xcodeproj) or a workspace.
    type: enum
    enum: ["project", "workspace"]
    default: "project"
  project_path:
    description: The path to the Xcode project (*.xcodeproj) or the Xcode workspace (*.xcworkspace) that you want to build, relative to the root of the repository.
    type: string
  build_configuration:
    description: The build configuration to use. This is normally either "Debug" or "Release" but you may have custom build configuration configured for your app.
    type: string
    default: "Debug"
  derived_data_path:
    description: The path to the directory to place the derived data, relative to the root of the repository.
    type: string
    default: "ios/build"
  device:
    description: The type of device you want to build for.
    type: string
    default: "iPhone 11"
  scheme:
    description: The scheme to use.
    type: string
  export:
    description: Whether to export the archive or not.
    type: boolean
    default: false
  export_options:
    description: Export options for IPA.
    type: string
    default: ""
  cache:
    description: Save and restore the build cache? Defaults to true
    type: boolean
    default: true

steps:
  - when:
      condition: <<parameters.cache>>
      steps:
        - restore_cache:
            name: Restoring iOS Build caches
            keys:
              - ios-build-cache-{{ arch }}-{{ checksum "ios/Podfile.lock" }}-{{ .Environment.CACHE_VERSION }}


  - when:
      condition:
        not: <<parameters.export>>
      steps:
          - run:
              name: Build iOS App
              command: "export RCT_NO_LAUNCH_PACKAGER=true && xcodebuild -<<parameters.project_type>> <<parameters.project_path>> -destination 'platform=iOS Simulator,name=<<parameters.device>>' -scheme <<parameters.scheme>> -parallelizeTargets -configuration <<parameters.build_configuration>> -derivedDataPath <<parameters.derived_data_path>>  -UseModernBuildSystem=YES | xcpretty -k"

  - when:
      condition: <<parameters.export>>
      steps:
          - run:
              name: Build Signed iOS App
              command: |
                xcodebuild -<<parameters.project_type>> <<parameters.project_path>> \
                  -scheme <<parameters.scheme>> \
                  -configuration <<parameters.build_configuration>> \
                  -parallelizeTargets \
                  -derivedDataPath <<parameters.derived_data_path>> \
                  -UseModernBuildSystem=YES \
                  -sdk iphoneos \
                  -archivePath /tmp/App.xcarchive \
                  clean archive \
                  CODE_SIGN_STYLE=Manual \
                  CODE_SIGN_IDENTITY="$CODE_SIGNING_IDENTITY" \
                  PROVISIONING_PROFILE="$PROVISIONING_PROFILE_UUID" \
                | xcpretty -k

  - when:
      condition: <<parameters.export>>
      steps:
        - run:
            name: Archive iOS App
            command: |
              xcodebuild -exportArchive -archivePath /tmp/App.xcarchive -exportPath /tmp/exports -exportOptionsPlist <<parameters.export_options>>
        -run:
            name: Find IPA path
            command: |
              ipa_file_path=$(find /tmp/exports -name *.ipa | head -n 1)
              echo "export IPA_PATH=$ipa_file_path" >> $BASH_ENV
              source $BASH_ENV
        - store_artifacts:
            path: /tmp/exports

  - when:
      condition: <<parameters.cache>>
      steps:
        - save_cache:
            name: Saving iOS Build Cache
            paths:
              - <<parameters.derived_data_path>>/Build
            key: ios-build-cache-{{ arch }}-{{ checksum "ios/Podfile.lock" }}-{{ .Environment.CACHE_VERSION }}
            when: always
